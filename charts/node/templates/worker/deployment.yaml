{{- range $key, $indexer :=  .Values.indexers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "node.indexer.fullname" (merge (dict "context" $) $indexer) }}
  labels:
    {{- include "node.indexer.labels" (dict "context" $ "indexer" $indexer "component" "indexer") | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "node.indexer.selectorLabels" (dict "context" $ "indexer" $indexer "component" "indexer") | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include "node.globalConfigCheckSum" $}}
      {{- with $.Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "node.indexer.labels" (dict "context" $ "indexer" $indexer "component" "indexer") | nindent 8 }}
  {{- with $.Values.global.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "node.core.ServiceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.global.podSecurityContext | nindent 8 }}
      containers:
        - name: indexer
          securityContext:
            {{- toYaml $.Values.global.securityContext | nindent 12 }}
          image: "{{ $.Values.global.image.repository }}:{{ $.Values.global.image.tag | default $.Chart.AppVersion }}"
          args:
            - '--module=indexer'
            - '--indexer.network={{ $indexer.network }}'
            - '--indexer.worker={{ $indexer.worker }}'
          {{- with  $indexer.parameters }}
            - '--indexer.parameters={{ $indexer.parameters | toRawJson }}'
          {{- end }}
          imagePullPolicy: {{ $.Values.global.image.imagePullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/rss3/node
          {{- if $.Values.observability.opentelemetry.metrics.enable }}
          ports:
            - containerPort: 9090
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- end }}
          resources:
            {{- toYaml ($indexer.resources | default $.Values.global.indexerResources ) | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "node.fullname" $ }}
            defaultMode: 0644
{{- end }}