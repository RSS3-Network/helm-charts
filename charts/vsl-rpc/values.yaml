# Default values for vsl-rpc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

clusterDomain: cluster.local

updateStrategy:
  type: RollingUpdate
podManagementPolicy: Parallel

networkId: 12553

jwt:
  path: "/config/jwt-secret.txt"
sequencerhttp: "http://sequencer"

geth:
  genesis:
    path: /config/genesis.json
    url: ""
  # Additional volumeMounts on the output Deployment definition.
  dataDir: /data
  volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  env: []
  # - name: GETH_EXAMPLE_KEY
  #   value: example-value

  envFrom: []
  args: []
  image:
    repository: rss3/op-geth
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "rss3-main-1ecad30"
  ports:
    auth:
      addr: "0.0.0.0"
      port: 8551
      vhosts: "*"
    http:
      enable: true
      addr: "0.0.0.0"
      port: 8545
      api: "web3,debug,eth,txpool,net,engine"
      vhosts: "*"
      cors: "*"
    websocket:
      enable: false
      addr: "0.0.0.0"
      port: 8546
      origins: "*"
      api: "web3,debug,eth,txpool,net,engine"
    metric:
      enable: true
      addr: "0.0.0.0"
      port: 7300
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi
  livenessProbe:
    httpGet:
      port: http
    initialDelaySeconds: 60
    periodSeconds: 120
  readinessProbe:
    httpGet:
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10

node:
  autoDiscovery: true
  rollup:
    path: /config/rollup.json
    url: ""
  p2p:
    generateSecretName:
    generateSecretKey:

    privateKeyPath: "/config/opnode_p2p_priv.txt"
    peerStorePath: "/op_log/opnode_peerstore_db"
    discoveryPath: "/op_log/opnode_discovery_db"

    agent: ""
    banPeers: false
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
  image:
    repository: rss3/op-node
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: d2c5ced00901227473fc196fda838191f0cb4e02
  ports:
    rpc:
      addr: "0.0.0.0"
      port: 9545
    p2p:
      addr: "0.0.0.0"
      port: 9003
    metric:
      enable: true
      addr: "0.0.0.0"
      port: 7301
  env: []
  envFrom: []
  args: []
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi
  livenessProbe:
    httpGet:
      port: rpc
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  readinessProbe:
    httpGet:
      port: rpc
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
## proxyd
proxyd:
  name: proxyd
  enabled: false
  image:
    repository: rss3/proxyd
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: d2c5ced00901227473fc196fda838191f0cb4e02

  ports:
    rpc:
      addr: "0.0.0.0"
      port: 9045

configs:
  geth:
    create: true
    annotations: {}

    verbosity: 3
    nodiscover: true
    maxpeers: 0
    rollup.disabletxpoolgossip: true
    gcmode: "archive"
    rpc.allow-unprotected-txs: true
    syncmode: "full"

  node:
    create: true
    annotations: {}

    snapshotlog.file: "/op_log/snapshot.log"

storage:
  hostPath: ""
  recovery:
    enabled: false
    snapshotName:
  persistentVolume:
    size: 500Gi
    storageClass: ""

    # Additional labels to apply to the created PersistentVolumeClaims.
    labels: {}
    # Additional annotations to apply to the created PersistentVolumeClaims.
    annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  labels: {}
  annotations: {}

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

initContainers: []

nodeSelector: {}

tolerations: []

affinity: {}
